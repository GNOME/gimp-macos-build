version: 2.1

# -------------------------
#        COMMANDS
# -------------------------
commands:

  setup-arm64:
    steps:
      # for local builds, this needs to be checked out to `~/project`
      - checkout
      - run:
          name: Avoid hosts unknown for gitlab.gnome.org
          command: mkdir -p ~/.ssh/ && echo -e "Host gitlab.gnome.org\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

  cache-break-arm64:
    steps:
      - run:
          name: should cache break
          # Triggering cache changes should be done in the directories below
          command: |
            cache_break=$(md5 ports/cache_break)
            if [ ! -e "${HOME}/CACHE_BREAK" ] || [ "${cache_break}" != "$(cat "${HOME}/CACHE_BREAK")" ]; then
              echo "Cache break"
              echo "${cache_break}" > "${HOME}/CACHE_BREAK"
              # scripts/macports_uninstall.sh --formulas-only
            fi

  setup-macports-arm64:
    steps:
        - run:
            name: Install macports
            command: |
              scripts/macports0_install.sh
            no_output_timeout: 30m
        # - run:
        #     name: Gimp version (default `master`)
        #     command: |
        #       pushd ${HOME}/project/modulesets
        #           if [ ! -z "${BRANCH}" ]; then
        #               revision_or_tag="revision=\"${BRANCH}\""
        #           elif [ ! -z "${TAG}" ]; then
        #               revision_or_tag="tag=\"${TAG}\""
        #           else
        #               revision_or_tag="revision=\"master\""
        #           fi
        #           sed -e "s|%REVISION_OR_TAG%|${revision_or_tag}|g" \
        #               -e "s|%WARNING%|DO NOT EDIT THIS FILE. It is automatically generated from the modulesets/gtk-osx-gimp.modules.tmpl file.|g" \
        #               gtk-osx-gimp.modules.tmpl > gtk-osx-gimp.modules
        #       popd

# -------------------------
#        JOBS
# -------------------------
jobs:

  dependencies-part1-arm64:
    machine: true
    resource_class: gnome/gimp

    steps:
      - setup
      - cache-break
      - setup-macports
      - run:
          name: Build GIMP dependencies part 1
          command: |
            scripts/macports1_install_packages.sh --circleci --part1
          no_output_timeout: 30m

  dependencies-part2-arm64:
    machine: true
    resource_class: gnome/gimp

    steps:
      - setup
      - setup-macports
      - run:
          name: Build GIMP dependencies part 2
          command: |
            scripts/macports1_install_packages.sh --circleci --part2
          no_output_timeout: 30m

  dependencies-part3-arm64:
    machine: true
    resource_class: gnome/gimp

    steps:
      - setup
      - setup-macports
      - run:
          name: Build GIMP dependencies part 3
          command: |
            scripts/macports1_install_packages.sh --circleci --part3
          no_output_timeout: 30m

  dependencies-part4-arm64:
    machine: true
    resource_class: gnome/gimp

    steps:
      - setup
      - setup-macports
      - run:
          name: Build GIMP dependencies part 4
          command: |
            scripts/macports1_install_packages.sh --circleci --part4
          no_output_timeout: 30m

  dependencies-part5-arm64:
    machine: true
    resource_class: gnome/gimp

    steps:
      - setup
      - setup-macports
      - run:
          name: Build GIMP dependencies part 5
          command: |
            scripts/macports1_install_packages.sh --circleci --part5
          no_output_timeout: 30m

  build-gimp-arm64:
    machine: true
    resource_class: gnome/gimp

    steps:
      - setup
      - setup-macports
      - run:
          name: Build GIMP
          # XXX `make check` is not working reliably under circle ci, so we are
          # not using --check flag
          command: |
            scripts/macports2_install_gimp.sh circleci
      - run:
          name: Setup gtk-mac-bundler
          command: |
            if [ ! -d ~/Source/gtk-mac-bundler ]; then
              mkdir -p ~/Source
              cd ~/Source
              git clone https://gitlab.gnome.org/lukaso/gtk-mac-bundler
              cd gtk-mac-bundler
              make install
            fi
      - run:
          name: Creating DMG package
          command: |
            scripts/macports3_build_app.sh
          no_output_timeout: 20m
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: "~"
          # Must be relative path from root
          paths:
            - macports-gimp299-osx-app
            - macports-gimp299-osx-app-x86_64
            - .profile

  package-gimp-arm64:
    macos:
      xcode: "13.3.0"

    steps:
      - setup
      - run:
          name: Importing signing certificate
          command: |
            mkdir ${HOME}/codesign && cd ${HOME}/codesign
            echo "$osx_crt" | base64 -D > gnome.pfx
            curl 'https://developer.apple.com/certificationauthority/AppleWWDRCA.cer' > apple.cer
            security create-keychain -p "" signchain
            security set-keychain-settings signchain
            security unlock-keychain -u signchain
            security list-keychains  -s "${HOME}/Library/Keychains/signchain-db" "${HOME}/Library/Keychains/login.keychain-db"
            security import apple.cer -k signchain  -T /usr/bin/codesign
            security import gnome.pfx  -k signchain -P "$osx_crt_pw" -T /usr/bin/codesign
            security set-key-partition-list -S apple-tool:,apple: -k "" signchain
            rm -rf ${HOME}/codesign
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: "~"
      - run:
          name: Creating DMG package
          command: |
            source ~/.profile
            cd ${HOME}/project

            # Authorize applescript on circle ci build
            epochdate=$(($(date +'%s * 1000 + %-N / 1000000')))
            tcc_service_appleevents="replace into access (service,client,client_type,auth_value,auth_reason,auth_version,indirect_object_identifier_type,indirect_object_identifier,flags,last_modified) values (\"kTCCServiceAppleEvents\",\"/usr/sbin/sshd\",1,2,4,1,0,\"com.apple.finder\",0,$epochdate);"
            sudo sqlite3 "/Users/distiller/Library/Application Support/com.apple.TCC/TCC.db" "$tcc_service_appleevents"

            # run script
            scripts/macports4_build_dmg.sh
          no_output_timeout: 20m
      - run:
          name:  Notarizing DMG package
          command: |
            package/notarize.sh
          no_output_timeout: 20m
      - store_artifacts:
          path: /tmp/artifacts
          destination: builds

workflows:
  version: 2
  build-arm64:
    jobs:
      - dependencies-part1-arm64
      - dependencies-part2-arm64:
          requires:
            - dependencies-part1-arm64
      - dependencies-part3-arm64:
          requires:
            - dependencies-part2-arm64
      # - dependencies-part4-arm64:
      #     requires:
      #       - dependencies-part3-arm64
      # - dependencies-part5-arm64:
      #     requires:
      #       - dependencies-part4-arm64
      - build-gimp-arm64:
          requires:
            - dependencies-part3-arm64
      - package-gimp-arm64:
          requires:
            - build-gimp-arm64
