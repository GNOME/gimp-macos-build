# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           meson 1.0
PortGroup           legacysupport 1.0

name                gimp3
set my_name         gimp3
version             2.99.13
revision            1
epoch               1
set branch          [join [lrange [split ${version} .] 0 1] .]
license             {GPL-3+ LGPL-3+}
categories          graphics
maintainers         {lukaso @lukaso} openmaintainer

description         GIMP is a cross-platform image editor available for GNU/Linux, OS X, Windows \
                    and more operating systems.

long_description    GIMP is a cross-platform image editor available for GNU/Linux, OS X, Windows \
                    and more operating systems. It is free software, you can change its source \
                    code and distribute your changes. Whether you are a graphic designer, \
                    photographer, illustrator, or scientist, GIMP provides you with sophisticated \
                    tools to get your job done. You can further enhance your productivity with \
                    GIMP thanks to many customization options and 3rd party plugins.

homepage            https://gimp.org/
fetch.type          git
git.url             https://gitlab.gnome.org/GNOME/gimp.git
git.branch          origin/master

# checksums           rmd160  d6e7de3f332594802226736d41228ffd13af251f \
#                     sha256  e4a33c8430a5042fba8439b595348e71870f0d95fbf885ff553f9020c1bed750 \
#                     size    5722188

depends_build-append \
                    port:pkgconfig

depends_lib-append \
                    path:lib/pkgconfig/babl.pc:babl \
                    path:include/turbojpeg.h:libjpeg-turbo \
                    port:exiv2 \
                    port:gexiv2 \
                    path:lib/pkgconfig/gobject-introspection-1.0.pc:gobject-introspection \
                    path:lib/pkgconfig/jasper.pc:jasper \
                    port:json-glib \
                    port:lcms2 \
                    port:libraw \
                    path:lib/pkgconfig/librsvg-2.0.pc:librsvg \
                    port:openexr \
                    port:poly2tri-c \
                    port:py310-gobject3 \
                    path:lib/pkgconfig/poppler.pc:poppler \
                    port:webp \
                    port:icu \
                    port:openjpeg \
                    port:ilmbase \
                    port:json-c \
                    port:libde265 \
                    port:nasm \
                    port:x265 \
                    port:util-linux \
                    port:xmlto \
                    port:py-cairo \
                    port:py-gobject3 \
                    port:gtk-osx-application-gtk3 \
                    port:libarchive \
                    port:libyaml \
                    port:glib-networking \
                    port:poppler-data \
                    port:fontconfig \
                    port:libmypaint \
                    port:mypaint-brushes1 \
                    port:libheif \
                    port:aalib \
                    port:appstream-glib \
                    port:shared-mime-info \
                    port:iso-codes \
                    port:libwmf \
                    port:libmng \
                    port:ghostscript \
                    port:gegl \
                    port:gjs \
                    port:adwaita-icon-theme \
                    port:hicolor-icon-theme

patchfiles-append   pythonpath.patch
patch.pre_args      -p1

# Set preferred python version
set py_ver          3.10
set py_ver_nodot    [string map {. {}} ${py_ver}]

depends_build-append \
                    port:python${py_ver_nodot}

configure.python    ${prefix}/bin/python${py_ver}

post-patch {
    reinplace -W ${worksrcpath} \
        "s|@@PYTHON3_BIN@@|${configure.python}|" \
        meson.build
}

# needs C++14 C11
compiler.cxx_standard 2014
compiler.c_standard   2011

set python_framework        ${frameworks_dir}/Python.framework/Versions/3.10
configure.pkg_config_path   ${python_framework}/lib/pkgconfig

# disable vala extensions by default (currently broken)
# enable with +vala variant for testing
configure.args-append       -Dbuild-id=org.gimp.GIMP_official \
                            -Drevision=0 \
                            -Dvala-plugins=disabled \
                            -Dgi-docgen=disabled

# at present, luajit does not build on PowerPC
# platform darwin powerpc {
#     depends_lib-delete path:lib/libluajit-5.1.2.dylib:luajit
#     configure.args-append -Dlua=false
# }

variant debug description {Build with debug symbols} {
    configure.optflags-append -g
}

# TODO
# Adding --build=whatever doesn't work with meson. How do we do this?
#platform darwin {
#    if {[variant_isset universal]} {
#        # In order to build universal on Leopard, you need MacPorts 2.1 at least
#        set merger_configure_args(x86_64) --build=${build_arch}-apple-${os.platform}${os.version}
#        set merger_configure_cflags(ppc) -fno-altivec
#        set merger_configure_cxxflags(ppc) -fno-altivec
#    } elseif {${build_arch} eq "ppc"} {
#        configure.cflags-append -fno-altivec
#        configure.cxxflags-append -fno-altivec
#    } elseif {${build_arch} eq "x86_64"} {
#        configure.args-append --build=${build_arch}-apple-${os.platform}${os.version}
#    }
#}

# gobject-introspection uses g-ir-scanner, which uses $CC from env
if {${universal_possible} && [variant_isset universal]} {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_env(${arch})  "CC=${configure.cc} -arch ${arch}"
        lappend merger_destroot_env(${arch})  "CC=${configure.cc} -arch ${arch}"
    }
} else {
    build.env-append       "CC=${configure.cc} ${configure.cc_archflags}"
    destroot.env-append    "CC=${configure.cc} ${configure.cc_archflags}"
}

variant gtk_docs description {Build API docs using gtk-doc} {
    depends_build-append    port:gtk-doc
    configure.args-append -Ddocs=true
}

variant vala description {Enable build of vala extensions} {
    depends_lib-append path:bin/vala:vala
    configure.args-delete -Dvapigen=disabled
}

variant workshop description {Enable build of workshop operations} {
    depends_lib-append port:lensfun
    configure.args-append -Dworkshop=true
}

#
# the following dummy variants are used
# to identify this port's binary dependencies
# inherited from libsdl and librsvg
#

variant x11 conflicts quartz {}
variant quartz conflicts x11 {}

if {![variant_isset quartz]} {
    default_variants +x11
}

livecheck.type      regex
livecheck.url       https://download.gimp.org/pub/${my_name}/${branch}/
livecheck.regex     "${my_name}-(\\d+(?:\\.\\d+)*)"
