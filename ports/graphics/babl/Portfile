# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           meson 1.0
PortGroup           debug 1.0

name                babl
conflicts           babl-devel
set my_name         babl

# ***** For releasing *****
# 1. Update version and/or revision to the desired state
#    If the version is not a release (e.g. 0.1.107) then do not touch the
#    revision as it will always pull the latest code anyway.

# This code will get the latest tag from the babl repo
# dep=babl
# repo="https://gitlab.gnome.org/GNOME/${dep}.git"
# tag=$(git ls-remote --tags --exit-code --refs "$repo" | grep -oi "${dep}_[0-9]*_[0-9]*_[0-9]*" | sort --version-sort | tail -1)
# echo Please use babl tag: $tag

# 2. Ensure any release-specific patches are added to the patchfiles list in the
#    correct if statement (and order)
# 3. Also update version info for gimp3 and gegl
# 4. last_dev and last_release should be set individually when setting version.
#    For example, when setting to a release, update only last_release. When
#    setting to a dev version, update only last_dev.
# *****
version             0.1.115
set last_release    0.1.114
set last_dev        0.1.115
revision            0

license             LGPL-3+
set branch          [join [lrange [split ${version} .] 0 1] .]
categories          graphics
maintainers         {mascguy @mascguy} openmaintainer
platforms           darwin

description         Babl is a library for dynamically handling pixel formats and managing \
                    conversions between them.
long_description    ${description}

homepage            http://gegl.org/babl
fetch.type          git
git.url             https://gitlab.gnome.org/GNOME/babl.git

# Releasing and branch management
set major           [lindex [split ${version} .] 0]
set minor           [lindex [split ${version} .] 1]
set patch           [lindex [split ${version} .] 2]
set is_release      [expr {$patch % 2 == 0}]
set is_stable       [expr {$minor % 2 == 0} && ${is_release}]

if {${is_release}} {
    git.branch      BABL_${major}_${minor}_${patch}
} else {
    set branch      origin/master
    revision        0
}

# Release-specific patches (step 2 from instructions above)
if {${major} == 0 && ${minor} == 1 && ${patch} == 106 && ${revision} >= 0} {
    # Nothing right now
    # patchfiles-append \
    #                 macos-Remove-DYLD_LIBRARY_PATH.patch
}

configure.args-append \
                    -Dwith-docs=false

depends_build-append \
                    port:pkgconfig

depends_lib-append  port:lcms2 \
                    path:lib/pkgconfig/gobject-introspection-1.0.pc:gobject-introspection \
                    path:bin/vala:vala

# Vapigen is broken on PPC: https://gitlab.gnome.org/GNOME/vala/-/issues/1297
platform darwin powerpc {
    depends_lib-delete \
                    path:bin/vala:vala
    configure.args-append \
                    -Denable-vapi=false
}

# require C11 (typedef redefinition)
# babl-icc.c:1031:25: error: redefinition of typedef 'UTF8' is invalid in C
compiler.c_standard 2011

# In 0.1.12, i386 fails to compile with SL's gcc-4.2:
#    babl-cpuaccel.c:169: error: ‘asm’ operand has impossible constraints
compiler.blacklist-append *gcc-3.* *gcc-4.*

# babl-0.1.72 default compiler on macOS 10.10 (clang-700.1.81) has trouble with extension sse-half
# babl-0.1.72/extensions/sse-half.c:49:24: error: invalid conversion between vector type '__v4sf' (vector of 4 'float' values) and integer type 'int' of different size
#       __v4sf out_val = (__v4sf)_mm_cvtph_ps(in_val);
#                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
compiler.blacklist-append {clang < 900}

# gobject-introspection uses g-ir-scanner, which uses $CC from env
if {${universal_possible} && [variant_isset universal]} {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_env(${arch})  "CC=${configure.cc} -arch ${arch}"
        lappend merger_destroot_env(${arch})  "CC=${configure.cc} -arch ${arch}"
    }
} else {
    build.env-append       "CC=${configure.cc} ${configure.cc_archflags}"
    destroot.env-append    "CC=${configure.cc} ${configure.cc_archflags}"
}

variant docs description {Generate optional docs} {
    depends_build-append   port:w3m \
                           path:lib/pkgconfig/librsvg-2.0.pc:librsvg

    configure.args-delete  -Dwith-docs=false
    configure.args-append  -Dwith-docs=true

    post-destroot {
        xinstall -m 0755 -d ${destroot}${prefix}/share/doc/${name}
        xinstall -m 0644 -W ${build.dir} README \
            ${destroot}${prefix}/share/doc/${name}
    }
}

livecheck.type      regex
livecheck.url       http://download.gimp.org/pub/${my_name}/${branch}/
livecheck.regex     "${my_name}-(\\d+(?:\\.\\d+)+)"
