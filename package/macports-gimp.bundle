<?xml version="1.0" standalone="no"?>
<!--*- mode: xml -*-->
<app-bundle>
  <meta>
    <!-- Where to pick up the GTK+ installation, icon themes,
         etc. Note that "${env:JHBUILD_PREFIX}" is evaluated to the
         value of the environment variable JHBUILD_PREFIX. You can
         define additional prefixes and refer to them in paths
         throughout this file on the form "${prefix:name}". This is
         useful for installing certain libraries or even the
        eapplication itself separately. Note that JHBUILD_PREFIX is
         defined by jhbuild, so it you are not using jhbuild you can
         either define your own or just hardcode the path here.
    -->
    <prefix name="default">${env:JHBUILD_PREFIX}</prefix>
    <!-- The project directory is the default location of the created
         app. If you leave out the path, the current directory is
         used. Note the usage of an environment variable here again.
    -->
    <destination overwrite="yes">${env:PACKAGE_DIR}</destination>
    <image>
      <!-- Not implemented yet (DMG image). -->
    </image>
    <!-- Comment this out to keep the install names in binaries -->
    <!-- <run-install-name-tool/> does not work for the gimp -->
    <!-- Optionally specify a launcher script to use. If the
         application sets up everything needed itself, like
         environment variable, linker paths, etc, a launcher script is
         not needed. If the source path is left out, the default
         script will be used.
    -->
    <!-- <launcher-script>${project}/launcher.sh</launcher-script > -->
   <!-- <launcher-script>
      ${project}/launcher-2.10.sh
    </launcher-script> -->
    <!-- Not implemented: Optional runtime, could be python or mono
         for example.
    -->
    <!-- <runtime copy="yes">/usr/bin/python</runtime -->
    <!-- Indicate the active gtk version to use. This is needed only
         for gtk+-3.0 projects. -->
    <gtk>gtk+-3.0</gtk>
  </meta>
  <!-- We need to pack our own Python to avoid compatibility problems. -->
  <binary dest="${bundle}/Contents/MacOS">
    ${prefix}/bin/python3.10
  </binary>
  <binary dest="${bundle}/Contents/MacOS">
    ${prefix}/bin/gegl
  </binary>
  <!-- gimp additional binaries -->
  <binary dest="${bundle}/Contents/MacOS">${prefix}/bin/gimp-console-2.99</binary>
  <binary dest="${bundle}/Contents/MacOS">${prefix}/bin/gimp-debug-tool-2.99</binary>
  <binary dest="${bundle}/Contents/MacOS">${prefix}/bin/gimptool-2.99</binary>
  <binary dest="${bundle}/Contents/MacOS">${prefix}/bin/gimp-script-fu-interpreter-3.0</binary>

  <!-- Copy in Info.plist -->
  <plist>${project}/info.plist</plist>
  <binary>
    ${prefix}/lib/libgegl-sc-0.4.dylib
  </binary>
  <binary>
    ${prefix}/lib/libharfbuzz-gobject.0.dylib
  </binary>

  <binary>
    ${prefix}/lib/gio/modules
  </binary>

  <!-- These are used to copy in dependencies, in reality the whole dir struct needs to be copied in -->
  <binary recurse="True">
    ${prefix}/Library/Frameworks/Python.framework/Versions/3.10/*
  </binary>
  <!-- Name of main gimp binary -->
  <main-binary>${prefix}/bin/gimp-2.99</main-binary>
  <!-- Copy in gimp plugins -->
  <binary recurse="True">${prefix}/lib/gimp/2.99/plug-ins/*</binary>
  <!-- Copy in gimp modules -->
  <binary>${prefix}/lib/gimp/2.99/modules/*.so</binary>
  <!-- Copy in gimp extensions -->
  <binary recurse="True">${prefix}/lib/gimp/2.99/extensions/*</binary>
  <!-- Copy in babl modules -->
  <binary>${prefix}/lib/babl-0.1/*.dylib</binary>
  <!-- Copy in gegl modules -->
  <binary>${prefix}/lib/gegl-0.4/*.dylib</binary>
  <data>${prefix}/lib/gegl-0.4/*.json</data>
  <!-- Copy in fortran and others -->
  <binary>${prefix}/lib/libgcc/*.dylib</binary>
  <!-- Copy in GTK+ printer backends -->
  <binary>${prefix}/lib/${gtkdir}/${pkg:${gtk}:gtk_binary_version}/printbackends/*.so</binary>
  <!-- Copy in GTK+ immodules -->
  <binary>${prefix}/lib/${gtkdir}/${pkg:${gtk}:gtk_binary_version}/immodules/*.so</binary>
  <binary>${prefix}/lib/gdk-pixbuf-2.0/2.10.0/loaders/*.so</binary>
  <binary dest="${bundle}/Contents/MacOS">${prefix}/bin/gdk-pixbuf-query-loaders</binary>
  <binary>${prefix}/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache</binary>
  <!-- Translation filenames-->
  <translations name="gtk30">
    ${prefix}/share/locale
  </translations>
  <!-- GTK+3 data -->
  <data>${prefix}/etc/gtk-3.0/*</data>
  <!-- Fontconfig data; requires clean up -->
  <data>
    ${prefix}/etc/fonts
  </data>
  <!-- Gimp data -->
  <data>${prefix}/etc/gimp/2.99/*</data>
  <data dest="${bundle}/Contents/Resources/share/gimp">${prefix}/share/gimp</data>
  <!-- brushes -->
  <data>${prefix}/share/mypaint-data</data>
  <!-- XML data -->
  <!-- Needs to be updated to not have absolute build paths -->
  <data>${prefix}/etc/xml/catalog</data>
  <data>${prefix}/share/xml/docbook</data>
  <data>${prefix}/var/macports/distfiles/docbook-xsl</data>
  <!-- locale (TODO: trim) -->
  <data>${prefix}/share/locale</data>
  <data>${prefix}/lib/charset.alias</data>
  <!-- Theme data-->
  <data>${prefix}/share/themes</data>
  <!-- iso codes -->
  <data>${prefix}/share/xml/iso-codes</data>
  <!-- libwmf fonts -->
  <data>${prefix}/share/fonts/libwmf</data>
  <!-- glib 2 schemas -->
  <data recurse="True">
    ${prefix}/share/glib-2.0/schemas/*
  </data>
  <!-- gi repository information -->
  <binary>${prefix}/lib/girepository-1.0/*</binary>
  <data>${prefix}/share/gir-1.0/*</data>
  <!-- Interesting defaults -->
  <!-- <data dest="${bundle}/Contents/Resources/etc/gimp/2.99/gimprc">
    ${project}/gimprc
  </data>
-->
  <!-- Icons -->
  <data dest="${bundle}/Contents/Resources">${project}/gimp.icns</data>
  <data dest="${bundle}/Contents/Resources">${project}/xcf.icns</data>

  <!-- Icon theme, both tango and hicolor are required? -->
  <icon-theme icons="all">
    Adwaita
  </icon-theme>
</app-bundle>
